{"version":3,"sources":["Components/Filter/Filter.module.css","Components/ContactItem/ContactItem.module.css","Components/ContactList/ContactList.module.css","redux/contacts/contacts-selectors.js","redux/contacts/contacts-actions.js","Components/Filter/Filter.js","Components/FormContacts/FormContacts.js","Components/ContactList/ContactList.js","Components/ContactItem/ContactItem.js","App.js","reportWebVitals.js","redux/contacts/contacts-reducers.js","redux/store.js","index.js","Components/FormContacts/FormContacts.module.css"],"names":["module","exports","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","normalizedFilter","toLowerCase","contact","name","includes","contactsActions","addContact","createAction","number","payload","id","shortid","generate","deleteContact","changeFilter","Filter","title","dispatch","useDispatch","value","useSelector","className","s","label","type","onChange","e","target","input","FormContacts","submit","useState","setName","setNumber","handleChange","currentTarget","reset","onSubmit","preventDefault","find","alert","form","required","button","ContactList","children","list","ContactItem","visibleContacts","map","i","item","text","onClick","onDeleteTodo","App","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","actions","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducers","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.3ebd5e7e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Filter_title__2_1mT\",\"label\":\"Filter_label__2Dgg2\",\"input\":\"Filter_input__361DJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__IKAUX\",\"button\":\"ContactItem_button__27n7Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1jeMp\"};","\r\nexport const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = state => {\r\n    const items = getContacts(state);\r\n    const filter = getFilter(state);\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return items.filter((contact) =>\r\n        contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n};","import shortid from 'shortid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('contacts/add', (name, number) => ({\r\n    payload: {\r\n        id: shortid.generate(),\r\n        name,\r\n        number,\r\n    },\r\n}));\r\n\r\nconst deleteContact = createAction('contacts/delete');\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\nconst contactsActions = { addContact, deleteContact, changeFilter };\r\nexport default contactsActions;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from './Filter.module.css'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\n\nfunction Filter({ title }) {\n    const dispatch = useDispatch();\n    const value = useSelector(getFilter);\n\n    return (\n        <>\n            <h2 className={s.title}>{title}</h2>\n            <label className={s.label}>\n                Find contacts by name\n                <input type=\"text\" value={value} name=\"filter\" onChange={e => dispatch(contactsActions.changeFilter(e.target.value))} className={s.input}></input>\n            </label>\n        </>\n    )\n}\n\n\nFilter.propTypes = {\n    title: PropTypes.string,\n}\nexport default Filter;","import React, { useState } from \"react\";\nimport s from './FormContacts.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\n\nfunction FormContacts({ submit }) {\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const items = useSelector(getContacts);\n\n  const handleChange = ({ currentTarget }) => {\n    const { name, value } = currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n\n  }\n\n  const handleChangeSubmit = (e) => {\n    e.preventDefault();\n\n    if (items.find(contact => contact.name === name)) {\n      return alert(`${name} is already in contacts`)\n    }\n    dispatch(contactsActions.addContact(name, number));\n\n    reset();\n\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n\n\n  return (\n    <form onSubmit={handleChangeSubmit} className={s.form}>\n      <label className={s.label}>\n        Name\n        <input type=\"text\" name=\"name\" required value={name} onChange={handleChange} className={s.input}></input>\n      </label>\n      <label className={s.label}>\n        Number\n        <input type=\"tel\" required name=\"number\" value={number} onChange={handleChange} className={s.input}></input>\n      </label>\n      <button type=\"submit\" className={s.button}>Add to card</button>\n    </form>\n  )\n}\n\nexport default FormContacts;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from './ContactList.module.css';\n\nfunction ContactList ({children}) {    \n        return (\n            <ul className={s.list}>\n               {children}\n            </ul>\n        )\n    }\nContactList.propTypes = {\n    children: PropTypes.any.isRequired \n}\nexport default ContactList;","import React from \"react\";\nimport s from './ContactItem.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors';\nfunction ContactItem() {\n\n  const visibleContacts = useSelector(getVisibleContacts)\n  const dispatch = useDispatch();\n  const onDeleteTodo = id => dispatch(contactsActions.deleteContact(id));\n\n\n\n  return (\n    <>\n      {visibleContacts.map(({ id, name, number }, i) => (\n        <li key={id} className={s.item}>\n          <span className={s.text}>\n            {`${i + 1})    `}\n            {name}: {number}\n          </span>\n          <button type=\"button\" onClick={() => onDeleteTodo(id)} className={s.button}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </>\n  )\n\n}\n\nexport default ContactItem;","import React from \"react\";\nimport Filter from \"./Components/Filter\";\nimport { useSelector } from 'react-redux';\nimport FormContacts from \"./Components/FormContacts\";\nimport ContactList from \"./Components/ContactList\";\nimport ContactItem from \"./Components/ContactItem\";\n\nfunction App() {\n  const items = useSelector(state => state.contacts.items);\n  // const [contacts, setContacts] = useState([]);\n\n\n  // useEffect(() => {\n  //   if (localStorage.getItem(\"contacts\")?.length > 0) {\n  //     setContacts(JSON.parse(localStorage.getItem(\"contacts\")));\n  //   }\n  // }, []);\n\n  // useEffect(() => {\n  //   localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  // }, [contacts]);\n\n\n  return (\n    <>\n      <h1>PHONEBOOK</h1>\n      <FormContacts />\n      <Filter title={\"Contacts\"} />\n      <ContactList >\n        {items.length === 0 && <h2>Список ваших контактів пустий</h2>}\n        <ContactItem />\n      </ContactList>\n\n    </>\n  )\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n    [actions.addContact]: (state, { payload }) => [...state, payload],\r\n    [actions.deleteContact]: (state, { payload }) =>\r\n        state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n});","\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport contactsReducers from './contacts/contacts-reducers';\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst middleware = [\r\n    ...getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n    }),\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n    key: 'contacts',\r\n    storage,\r\n    blacklist: ['filter'],\r\n};\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        contacts: persistReducer(contactsPersistConfig, contactsReducers),\r\n    },\r\n    devTools: process.env.NODE_ENV === 'development',\r\n    middleware,\r\n});\r\n\r\n\r\nexport const persistor = persistStore(store);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormContacts_form__1mF2t\",\"input\":\"FormContacts_input__1ARlC\",\"button\":\"FormContacts_button__2JoFU\",\"label\":\"FormContacts_label__pAoEz\"};"],"sourceRoot":""}